#include<stdio.h>
int main() {
	int T;
	int n;
	char ph[10][7] = { " " };
	int num[100] = {0};//记录#号数量 
	int k = 0;//
	scanf_s("%d", &T);
	while (T) {
		scanf_s("%d", &n); getchar();
		
		while (n) {
			//char ph[10][7] = {" "};
			int sum = 0;//记录'#'总数
			for (int i = 0; i < 7; i++) {
				scanf_s("%s", ph[i], 10);
			}//输入骰子 		
			for (int i = 0; i < 7; i++) {
				for (int j = 0; j < 7; j++) {
					
					if (ph[i][j] == '#') {
						sum++;
					}	
				}//求'#'总和 
			}//计算骰子的'#' 
			
			 /*第一种判断,但是没那么精确*/
			/*switch (sum) {
				case 4:num[k] += 2; break;
				case 3:num[k] += 3; break;
				case 16:num[k] += 4; break;
				case 12:num[k] += 6; break;
			}
			if (sum == 5 && ph[1][1] == '#') {
				num[k] += 5;
			}
			else if (sum == 5 && ph[2][3] == '#') {
				num[k] += 1;
			}//判断'#'的数量来确定骰子数量*/

			/*第二种精确判断*/
			if (sum == 5 && ph[2][3]=='#' && ph[3][2]== '#' && ph[3][3]== '#' && ph[3][4]== '#' && ph[4][3] == '#') {
				num[k] += 1;
			}
			else if (sum == 4  && ph[1][5]== '#' && ph[2][4]== '#' && ph[4][2]== '#' && ph[5][1] == '#') {
				num[k] += 2;
			}
			else if (sum == 3  && ph[1][5]== '#' && ph[3][3]== '#' && ph[5][1] == '#') {
				num[k] += 3;
			}
			else if (sum == 16  && ph[1][1]== '#' && ph[1][2]== '#' && ph[1][4]== '#' && ph[1][5]== '#' && ph[2][1]== '#' && ph[2][2]== '#' && ph[2][4]== '#' && ph[2][5]== '#' && ph[4][1]== '#' && ph[4][2]== '#' && ph[4][4]== '#' && ph[4][5]== '#' && ph[5][1]== '#' && ph[5][2]== '#' && ph[5][4]== '#' && ph[5][5] == '#') {
				num[k] += 4;
			}
			else if (sum == 5 && ph[1][1]== '#' && ph[1][5]== '#' && ph[3][3]== '#' && ph[5][1]== '#' && ph[5][5] == '#') {
				num[k] += 5;
			}
			else if (sum == 12 && ph[1][1]== '#' && ph[1][2]== '#' && ph[1][4]== '#' && ph[1][5]== '#' && ph[3][1]== '#' && ph[3][2]== '#' && ph[3][4]== '#' && ph[3][5]== '#' && ph[5][1]== '#' && ph[5][2]== '#' && ph[5][4]== '#' && ph[5][5]== '#') {
				num[k] += 6;
			}
			//printf("\nsum'#'=%d  num=%d\n", sum,num[k]);
			n--;
			//printf("num1=%d num2=%d sum=%d\n", num[0],sum);
		}//输入的骰子的数量 
		k++;
		T--;
	}
	for (int i = 0; i < k; i++) {
		printf("%d\n", num[i]);
	}

}